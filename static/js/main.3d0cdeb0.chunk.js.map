{"version":3,"sources":["components/ActionBar.js","components/ActionButton.js","components/Debug.js","components/Hint.js","components/Layout.js","components/Name.js","components/Remainder.js","components/Sprite.js","utils/index.js","context/pokemon.js","hooks/game.js","pages/Guess.js","pages/Hardcore.js","pages/TimeAttack.js","App.js","index.js"],"names":["ActionBar","children","style","paddingBottom","paddingTop","display","flexDirection","ActionButton","action","label","onClick","background","padding","fontFamily","border","borderRadius","outline","cursor","marginBottom","Debug","data","process","REACT_APP_USER_ENV","JSON","stringify","Hint","value","type","readOnly","disabled","letterSpacing","textAlign","Centered","width","maxWidth","margin","NameInput","onChange","autoFocus","borderBottom","fontSize","NameSubmit","backgroundColor","color","Name","validate","pop","useState","name","setName","onSubmit","e","preventDefault","target","Remainder","queue","length","Sprite","src","alt","height","ShuffleArray","arr","array","Array","from","i","j","Math","floor","random","MaskString","s","len","split","map","char","join","getPokemon","Promise","resolve","reject","a","fetch","response","ok","json","results","message","mutatePokemon","d","pokemon_species","poke","id","url","replace","replaceAll","sprite","sort","b","createContext","C","Consumer","P","Provider","setData","error","setError","useEffect","catch","pokemon","window","localStorage","setItem","checkCache","getItem","parse","setPokemon","WithPokeState","Component","props","context","WithState","STATE","ACTION","ERRORS","reducer","prevState","nextMonster","shift","current","state","push","shuffled","slice","helpText","errorIndex","VALIDATION_MAP","default","trim","toLocaleLowerCase","29","32","122","useDefaultGame","shuffledQueue","useReducer","useGameStateReducer","dispatch","validator","skip","reset","help","guess","isValid","Guess","history","useHistory","Hardcore","allowedFailures","gameState","failuresLeft","setFailuresLeft","validationResult","updatedFailures","useHardcoreGame","TimeAttack","timer","timeMS","setTimeMS","countdown","useRef","setTimeout","clearTimeout","useTimedGame","Home","App","overflow","basename","path","exact","ReactDOM","render","document","getElementById"],"mappings":"4OAEaA,EAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,SADuB,OAGvB,yBACEC,MAAO,CACLC,cAAe,MACfC,WAAY,MACZC,QAAS,OACTC,cAAe,WAGhBL,ICXQM,EAAe,SAAC,GAAD,IAC1BC,EAD0B,EAC1BA,OACAC,EAF0B,EAE1BA,MAF0B,OAI1B,4BACEC,QAAS,kBAAMF,KACfN,MAAO,CACLS,WAAY,QACZC,QAAS,UACTP,QAAS,eACTQ,WAAY,2DACZC,OAAQ,iBACRC,aAAc,MACdC,QAAS,OACTC,OAAQ,UACRC,aAAc,QAGfT,IClBQU,EAAQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEtB,MAD4D,UAAnCC,6HAAYC,mBAGnC,6BACGC,KAAKC,UAAUJ,EAAM,KAAM,IAHF,MCFnBK,EAAO,SAAC,GAAD,IAClBC,EADkB,EAClBA,MADkB,OAGlB,2BACEC,KAAK,OACLC,UAAQ,EACRC,UAAQ,EACRH,MAAOA,EACPxB,MAAO,CACLU,QAAS,MACTD,WAAY,QACZG,OAAQ,QACRD,WAAY,2DACZiB,cAAe,MACfC,UAAW,aCdJC,EAAW,SAAC,GAAD,IAAG/B,EAAH,EAAGA,SAAH,OACtB,yBACEC,MAAO,CACL+B,MAAO,OACPC,SAAU,QACVC,OAAQ,OACRJ,UAAW,WAGZ9B,I,OCPQmC,EAAY,SAAC,GAAD,IACvBV,EADuB,EACvBA,MACAW,EAFuB,EAEvBA,SAFuB,OAIvB,2BACEV,KAAK,OACLU,SAAUA,EACVX,MAAOA,EACPY,WAAS,EACTpC,MAAO,CACL6B,UAAW,SACXnB,QAAS,MACTM,aAAc,MACdJ,OAAQ,QACRH,WAAY,QACZI,aAAc,QACdwB,aAAc,iBACdvB,QAAS,OACTH,WAAY,2DACZ2B,SAAU,UAKHC,EAAa,kBACxB,4BACEd,KAAK,SACLzB,MAAO,CACLS,WAAY,QACZC,QAAS,UACTP,QAAS,eACTQ,WAAY,2DACZC,OAAQ,iBACR4B,gBAAiB,OACjBC,MAAO,OACP5B,aAAc,MACdC,QAAS,OACTC,OAAQ,YAZZ,UAgDW2B,EA7BW,SAAC,GAGlB,IAFLC,EAEI,EAFJA,SACAC,EACI,EADJA,IACI,EACoBC,mBAAS,IAD7B,mBACGC,EADH,KACSC,EADT,KAGJ,OACE,oCACE,0BACEC,SAAU,SAACC,GAET,GADAA,EAAEC,iBACEP,EAASG,GAGX,OAFAF,SACAG,EAAQ,KAIZ/C,MAAO,CACLG,QAAS,cACTC,cAAe,WAGjB,kBAAC,EAAD,CAAW+B,SAAU,gBAAGgB,EAAH,EAAGA,OAAH,OAAgBJ,EAAQI,EAAO3B,QAAQA,MAAOsB,IACnE,kBAAC,EAAD,SCrEKM,EAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,OAGvB,2BAAIA,EAAMC,OAAV,mBCHWC,EAAS,SAAC,GAAD,IACpBC,EADoB,EACpBA,IADoB,IAEpBC,WAFoB,MAEd,MAFc,SAIpB,yBACED,IAAKA,EACLC,IAAKA,EACLzD,MAAO,CACLgC,SAAU,QACV0B,OAAQ,QACRzB,OAAQ,W,yBCTP,SAAS0B,EAAaC,GAE3B,IADA,IAAMC,EAAQC,MAAMC,KAAKH,GAChBI,EAAIH,EAAMP,OAAS,EAAGU,EAAI,EAAGA,IAAK,CACzC,IAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADD,EAElB,CAACH,EAAMI,GAAIJ,EAAMG,IAAvCH,EAAMG,GAFkC,KAE9BH,EAAMI,GAFwB,KAI3C,OAAOJ,EAqBF,SAASQ,EAAWC,GACzB,IAAMC,EAAMD,EAAEhB,OAEd,OAAOgB,EAAEE,MAAM,IAAIC,KAAI,SAACC,EAAMV,GAC5B,OAAcA,EAALO,EARWL,KAAKE,SAAW,GAAK,GAShC,IAEFM,KACNC,KAAK,IC7BV,SAASC,IACP,OAAO,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,iBAAAC,EAAA,+EAEQC,MAAM,0CAFd,YAETC,EAFS,QAGFC,GAHE,gCAISD,EAASE,OAJlB,OAIPC,EAJO,OAKbP,EAAQO,GALK,yDAQfN,EAAO,KAAEO,SARM,QAUjBP,EAAO,uCAVU,0DAAZ,yDAcT,SAASQ,EAAcC,GAErB,OADgBA,EAAEC,gBACHhB,KAAI,SAACiB,GAAU,IACpB5C,EAAc4C,EAAd5C,KACF6C,GADgBD,EAARE,IACEC,QAAQ,4CAA6C,IAAIC,WAAW,IAAK,IACzF,MAAO,CACLH,KACA7C,OACAiD,OAAO,4EAAD,OAA8EJ,EAA9E,YAEPK,MAAK,SAAChB,EAAGiB,GAAJ,OAAUjB,EAAEW,GAAKM,EAAEN,M,MAGQO,wBAAc,MAAjCC,E,EAAVC,SAAuBC,E,EAAVC,SACRF,EAAWD,EACXG,EAAW,SAAC,GAElB,IADLvG,EACI,EADJA,SACI,EACoB8C,mBAAS,MAD7B,mBACG3B,EADH,KACSqF,EADT,OAEsB1D,mBAAS,MAF/B,mBAEG2D,EAFH,KAEUC,EAFV,KA2BJ,OAvBAC,qBAAU,WAAM,4CAEd,4BAAA1B,EAAA,sEACwBJ,IAAa+B,OAAM,SAAC1D,GAAD,OAAOwD,EAASxD,MAD3D,cACQ2D,EADR,OAEEC,OAAOC,aAAaC,QAHN,gBAGuB1F,KAAKC,UAAUsF,IACpDL,EAAQhB,EAAcqB,IAHxB,+DAFc,sBASd,IAAMI,EAAaH,OAAOC,aAAaG,QARvB,iBAShB,GAAKD,EAOL,OAFAT,EAAQhB,EAAclE,KAAK6F,MAAMF,KAE1B,WACLT,EAAQ,MACRE,EAAS,QAnBG,mCAWZU,KAUD,IAGD,kBAACd,EAAD,CACE7E,MAAO,CACLoF,QAAS1F,EACTsF,WAICA,IAAUtF,IACT,sIAGHA,GAAQnB,IAKFqH,EAAgB,SAAAC,GAAS,OAAI,SAAAC,GAAK,ODxEtBlB,ECwEoCA,EDxExB,SAAAiB,GAAS,OAAI,SAAAC,GAChD,OACE,kBAAClB,EAAD,MACG,SAACmB,GACA,OAAKA,EACG,kBAACF,EAAD,iBAAeE,EAAaD,IADf,WCoE0CD,EAApBG,CAA+BF,GDxEzD,IAAAlB,I,eEFZqB,EACE,cADFA,EAEF,UAFEA,EAGF,UAGEC,EACN,MADMA,EAEL,OAFKA,EAGJ,QAHIA,EAIL,OAJKA,EAKL,OALKA,EAMG,eAGVC,EAAS,CACb,mBACA,uBACA,cAGIC,EAAU,SACdC,EACAvH,GAEA,OAAQA,EAAOmB,MACb,KAAKiG,EAAa,IACRrE,EAAUwE,EAAVxE,MACFyE,EAAczE,EAAM0E,QAE1B,OAAKD,EAME,CACLzE,QACA2E,QAASF,EACTG,MAAOJ,EAAUI,OARV,CACLA,MAAOR,GAUb,KAAKC,EAAc,IACTrE,EAAmBwE,EAAnBxE,MAAO2E,EAAYH,EAAZG,QACf3E,EAAM6E,KAAKF,GACX,IAAMF,EAAczE,EAAM0E,QAE1B,MAAO,CACL1E,QACA2E,QAASF,EACTG,MAAOJ,EAAUI,OAGrB,KAAKP,EAAe,IAEZS,EAAWxE,EADCrD,EAAV+C,OAGR,MAAO,CACL4E,MAAOR,EACPpE,MAAOS,MAAMC,KAAKoE,GAAUC,MAAM,EAAGD,EAAS7E,QAC9C0E,QAASlE,MAAMC,KAAKoE,GAAUJ,SAGlC,KAAKL,EAAc,IACTM,EAAYH,EAAZG,QACJlF,EAAOkF,EAAQlF,KAEA,KAAfkF,EAAQrC,IAA4B,KAAfqC,EAAQrC,KAC/B7C,EAAO,WAGU,MAAfkF,EAAQrC,KACV7C,EAAO,YAGT,IAAMuF,EAAWhE,EAAWvB,GAC5B,OAAO,2BACF+E,GADL,IAEEQ,aAGJ,KAAKX,EACH,OAAO,2BACFG,GADL,IAEEI,MAAOR,IAGX,KAAKC,EAAsB,IAAD,EACIG,EAApBS,kBADgB,OACF,EADE,EAExB,OAAO,2BACFT,GADL,IAEES,YAAaA,EAAa,GAAKX,EAAOrE,SAG1C,QACE,OAAOuE,IAcPU,EAAiB,CACrBC,QAAS,SAACxD,EAAGiB,GAAJ,OAAUjB,EAAEyD,OAAOC,sBAAwBzC,EAAEyC,qBACtDC,GAAI,SAAC3D,EAAGiB,GAAJ,MAA2C,YAAjCjB,EAAEyD,OAAOC,qBAAqCH,EAAeC,QAAQxD,EAAGiB,IACtF2C,GAAI,SAAC5D,EAAGiB,GAAJ,MAA2C,YAAjCjB,EAAEyD,OAAOC,qBAAqCH,EAAeC,QAAQxD,EAAGiB,IACtF4C,IAAK,SAAC7D,EAAGiB,GAAJ,MAA+D,WAArDjB,EAAEyD,OAAOC,oBAAoB5C,WAAW,IAAK,KAAkE,YAA9Cd,EAAE0D,oBAAoB5C,WAAW,IAAK,KAAqByC,EAAeC,QAAQxD,EAAGiB,KAG1J6C,EAAiB,SAAC,GAExB,IADLzF,EACI,EADJA,MACI,EAnBsB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACvB0F,EAAgBpF,EAAa,YAAIN,IACvC,OAAO2F,qBAAWpB,EAAS,CACzBK,MAAOR,EACPpE,MAAO0F,EAAcX,MAAM,EAAG/E,EAAMC,QACpC0E,QAASe,EAAchB,UAeCkB,CAAoB,CAAE5F,UAD5C,mBACG4E,EADH,KACUiB,EADV,KAQEC,EAAYZ,EAAeN,EAAMD,QAAQrC,KAAO4C,EAAc,QAMpE,OAAO,2BACFN,GADL,IAEEiB,WACAtG,IAdU,kBAAMsG,EAAS,CAAEzH,KAAMiG,KAejC0B,KAdW,kBAAMF,EAAS,CAAEzH,KAAMiG,KAelC2B,MAdY,kBAAMH,EAAS,CAAEzH,KAAMiG,EAAcrE,WAejDiG,KAdW,kBAAMJ,EAAS,CAAEzH,KAAMiG,KAelC/E,SAZe,SAAC4G,GAChB,IAAIC,EAAUL,EAAUI,EAAOtB,EAAMD,QAAQlF,MAE7C,OADK0G,GAASN,EAAS,CAAEzH,KAAMiG,IACxB8B,GAUPhD,MAAOmB,EAAOM,EAAMK,eCjIXmB,EAAQrC,GAAc,YAE5B,IADLR,EACI,EADJA,QAEM8C,EAAUC,cADZ,EAaAb,EAAe,CACjBzF,MAAOuD,IAXPoB,EAHE,EAGFA,QACA3E,EAJE,EAIFA,MACAgF,EALE,EAKFA,SACAzF,EANE,EAMFA,IACAD,EAPE,EAOFA,SACAyG,EARE,EAQFA,KACAE,EATE,EASFA,KACAD,EAVE,EAUFA,MACApB,EAXE,EAWFA,MACAzB,EAZE,EAYFA,MAKF,OACE,oCACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAWnD,MAAOA,IAClB,kBAACX,EAAD,CAAMC,SAAUA,EAAUC,IAAKA,IAC/B,kBAAC,EAAD,CAAQY,IAAKwE,EAAQjC,SACpBsC,GAAa,kBAAC,EAAD,CAAM7G,MAAO6G,IAC1B7B,GAAU,2BAAIA,GACf,kBAAC,EAAD,KACIyB,IAAUR,GACV,oCACE,kBAAC,EAAD,CAAclH,MAAM,OAAOD,OAAQgJ,IACnC,kBAAC,EAAD,CAAc/I,MAAM,OAAOD,OAAQ8I,IACnC,kBAAC,EAAD,CAAc7I,MAAM,OAAOD,OAAQ,kBAAMoJ,EAAQxB,KAAK,SAGxDD,IAAUR,GACV,oCACE,kBAAC,EAAD,CAAclH,MAAM,aAAaD,OAAQ+I,MAI/C,kBAAC,EAAD,CAAOnI,KAAM+G,IACb,kBAAC,EAAD,CAAO/G,KAAM8G,SC1CR4B,EAAWxC,GAAc,YAE/B,IADLR,EACI,EADJA,QAEM8C,EAAUC,cADZ,EFkLyB,SAAC,GAGzB,IAFLtG,EAEI,EAFJA,MAEI,IADJwG,uBACI,MADc,GACd,EACEC,EAAYhB,EAAe,CAAEzF,UAD/B,EAEoCR,mBAASgH,GAF7C,mBAEGE,EAFH,KAEiBC,EAFjB,KA8BJ,OAAO,2BACFF,GADL,IAEEZ,SAde,SAAC5I,GAChB,GAAIA,EAAOmB,OAASiG,EAMlB,OALAsC,EAAgBH,QAChBC,EAAUZ,SAAV,2BACK5I,GADL,IAEE+C,WAIJyG,EAAUZ,SAAS5I,IAMnBqC,SA5Be,SAAC4G,GAChB,IAAMU,EAAmBH,EAAUnH,SAAS4G,GAC5C,IAAKU,EAAkB,CACrB,IAAMC,EAAkBH,EAAe,EACnCG,GAAmB,GACrBJ,EAAUZ,SAAS,CAAEzH,KAAMiG,IAE7BsC,EAAgBE,GAElB,OAAOD,GAoBPJ,gBAAiBE,IE7MfI,CAAgB,CAClB9G,MAAOuD,EACPiD,gBAAiB,IATjB7B,EAHE,EAGFA,QACA3E,EAJE,EAIFA,MACAV,EALE,EAKFA,SACAsF,EANE,EAMFA,MACAzB,EAPE,EAOFA,MACA0C,EARE,EAQFA,SACAW,EATE,EASFA,gBAMF,OACE,oCACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQrG,IAAKwE,EAAQjC,SACpBkC,IAAUR,GACT,kBAAC/E,EAAD,CAAMC,SAAUA,EAAUC,IAAK,kBAAMsG,EAAS,CAAEzH,KAAMiG,OAEtDlB,GAAU,2BAAIA,GAChB,4CAAkBqD,GAClB,kBAAC,EAAD,KACG5B,IAAUR,GACT,oCACE,kBAAC,EAAD,CAAclH,MAAM,OAAOD,OAAQ,kBAAMoJ,EAAQxB,KAAK,UAGxDD,IAAUR,GAAiBQ,IAAUR,IACrC,oCACE,kBAAC,EAAD,CAAclH,MAAM,aAAaD,OAAQ,kBAAM4I,EAAS,CAAEzH,KAAMiG,OAChE,kBAAC,EAAD,CAAcnH,MAAM,YAAYD,OAAQ,kBAAMoJ,EAAQxB,KAAK,UAIjE,kBAAC,EAAD,CAAW7E,MAAOA,IAClB,kBAAC,EAAD,CAAOnC,KAAM+G,IACb,kBAAC,EAAD,CAAO/G,KAAM8G,SCzCRoC,EAAahD,GAAc,YAEjC,IADLR,EACI,EADJA,QAEM8C,EAAUC,cADZ,EHmIsB,SAAC,GAGtB,IAFLtG,EAEI,EAFJA,MAEI,IADJgH,aACI,MADI,IACJ,EACEP,EAAYhB,EAAe,CAAEzF,UAD/B,EAEwBR,mBAASwH,GAFjC,mBAEGC,EAFH,KAEWC,EAFX,KAGEC,EAAYC,mBAElB/D,qBAAU,WACR8D,EAAUxC,QAAU0C,YAAW,WAC7B,GAAIJ,EAAS,KAAQ,EAInB,OAHAR,EAAUZ,SAAS,CAAEzH,KAAMiG,IAC3BiD,aAAaH,EAAUxC,cACvBuC,EAAU,GAGZA,EAAUD,EAAS,OAClB,OACF,CAACA,EAAQR,IAsBZ,OAAO,2BACFA,GADL,IAEEQ,SACApB,SAtBe,SAAC5I,GAChB,OAAIA,EAAOmB,OAASiG,GAClBiD,aAAaH,EAAUxC,SACvBuC,EAAUF,QACVP,EAAUZ,SAAS5I,IAGjBA,EAAOmB,OAASiG,GAClBiD,aAAaH,EAAUxC,SACvBuC,EAAUF,QACVP,EAAUZ,SAAV,2BACK5I,GADL,IAEE+C,iBAIJyG,EAAUZ,SAAS5I,MG9JjBsK,CAAa,CACfvH,MAAOuD,EACPyD,MAAO,MATPrC,EAHE,EAGFA,QACA3E,EAJE,EAIFA,MACAV,EALE,EAKFA,SACAsF,EANE,EAMFA,MACAzB,EAPE,EAOFA,MACA0C,EARE,EAQFA,SACAoB,EATE,EASFA,OAMF,OACE,oCACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQ9G,IAAKwE,EAAQjC,SACrB,yCAAeuE,EAAS,IAAxB,aACCrC,IAAUR,GACT,kBAAC/E,EAAD,CAAMC,SAAUA,EAAUC,IAAK,kBAAMsG,EAAS,CAAEzH,KAAMiG,OAEvDlB,GAAU,2BAAIA,GACf,kBAAC,EAAD,KACGyB,IAAUR,GACT,oCACE,kBAAC,EAAD,CAAclH,MAAM,OAAOD,OAAQ,kBAAMoJ,EAAQxB,KAAK,UAGxDD,IAAUR,GAAiBQ,IAAUR,IACrC,oCACE,kBAAC,EAAD,CAAclH,MAAM,aAAaD,OAAQ,kBAAM4I,EAAS,CAAEzH,KAAMiG,OAChE,kBAAC,EAAD,CAAcnH,MAAM,YAAYD,OAAQ,kBAAMoJ,EAAQxB,KAAK,UAIjE,kBAAC,EAAD,CAAW7E,MAAOA,IAClB,kBAAC,EAAD,CAAOnC,KAAM+G,IACb,kBAAC,EAAD,CAAO/G,KAAM8G,SC5Cf6C,EAAO,WACX,IAAMnB,EAAUC,cAChB,OACE,kBAAC,EAAD,KACE,yBAAK3J,MAAO,CAAEC,cAAe,MAAOC,WAAY,QAC9C,yCACA,gDAIF,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAcK,MAAM,SAASD,OAAQ,kBAAMoJ,EAAQxB,KAAK,cACxD,kBAAC,EAAD,CAAc3H,MAAM,WAAWD,OAAQ,kBAAMoJ,EAAQxB,KAAK,gBAC1D,kBAAC,EAAD,CAAc3H,MAAM,cAAcD,OAAQ,kBAAMoJ,EAAQxB,KAAK,sBAMxD4C,EAAM,kBACjB,yBACE9K,MAAO,CACL+B,MAAO,OACP2B,OAAQ,OACRqH,SAAU,SACVlJ,UAAW,WAGb,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAQmJ,SAAU7J,cAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8J,KAAK,UAAUC,OAAK,GACzB,kBAACzB,EAAD,OAEF,kBAAC,IAAD,CAAOwB,KAAK,YAAYC,OAAK,GAC3B,kBAACtB,EAAD,OAEF,kBAAC,IAAD,CAAOqB,KAAK,eAAeC,OAAK,GAC9B,kBAACd,EAAD,OAEF,kBAAC,IAAD,CAAOa,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,KACV,+C,MC1DZE,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.3d0cdeb0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const ActionBar = ({\r\n  children,\r\n}) => (\r\n  <div\r\n    style={{\r\n      paddingBottom: '1em',\r\n      paddingTop: '1em',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nexport const ActionButton = ({\r\n  action,\r\n  label,\r\n}) => (\r\n  <button \r\n    onClick={() => action()}\r\n    style={{\r\n      background: 'unset',\r\n      padding: '1em 2em',\r\n      display: 'inline-block',\r\n      fontFamily: \"'Press Start 2P', 'Helvetica Neue', 'Roboto', sans-serif\",\r\n      border: '2px solid #000',\r\n      borderRadius: '4px',\r\n      outline: 'none',\r\n      cursor: 'pointer',\r\n      marginBottom: '1em'\r\n    }}\r\n  >\r\n    {label}\r\n  </button>\r\n);\r\n","import React from 'react';\r\n\r\nexport const Debug = ({ data }) => {\r\n  const debugModeEnabled = process.env.REACT_APP_USER_ENV === 'debug'\r\n  if (!debugModeEnabled) return null;\r\n  return (\r\n    <pre>\r\n      {JSON.stringify(data, null, 2)}\r\n    </pre>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Hint = ({\r\n  value,\r\n}) => (\r\n  <input \r\n    type=\"text\" \r\n    readOnly \r\n    disabled \r\n    value={value}\r\n    style={{\r\n      padding: '1em',\r\n      background: 'unset',\r\n      border: 'unset',\r\n      fontFamily: \"'Press Start 2P', 'Helvetica Neue', 'Roboto', sans-serif\",\r\n      letterSpacing: '1em',\r\n      textAlign: 'center'\r\n    }}\r\n  />\r\n);\r\n","import React from 'react';\r\n\r\nexport const Centered = ({ children }) => (\r\n  <div\r\n    style={{\r\n      width: '100%',\r\n      maxWidth: '350px',\r\n      margin: 'auto',\r\n      textAlign: 'center'\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n","import React, {\r\n  useState,\r\n} from 'react';\r\n\r\nexport const NameInput = ({\r\n  value,\r\n  onChange,\r\n}) => (\r\n  <input \r\n    type=\"text\" \r\n    onChange={onChange} \r\n    value={value} \r\n    autoFocus\r\n    style={{\r\n      textAlign: 'center',\r\n      padding: '1em',\r\n      marginBottom: '1em',\r\n      border: 'unset',\r\n      background: 'unset',\r\n      borderRadius: 'unset',\r\n      borderBottom: '2px solid #000',\r\n      outline: 'none',\r\n      fontFamily: \"'Press Start 2P', 'Helvetica Neue', 'Roboto', sans-serif\",\r\n      fontSize: '1em'\r\n    }}\r\n  />\r\n);\r\n\r\nexport const NameSubmit = () => (\r\n  <button\r\n    type=\"submit\"\r\n    style={{\r\n      background: 'unset',\r\n      padding: '1em 2em',\r\n      display: 'inline-block',\r\n      fontFamily: \"'Press Start 2P', 'Helvetica Neue', 'Roboto', sans-serif\",\r\n      border: '2px solid #000',\r\n      backgroundColor: '#000',\r\n      color: '#fff',\r\n      borderRadius: '4px',\r\n      outline: 'none',\r\n      cursor: 'pointer'\r\n    }}\r\n  >\r\n    Guess\r\n  </button>\r\n);\r\n\r\nexport const NameForm = ({\r\n  validate,\r\n  pop,\r\n}) => {\r\n  const [name, setName] = useState('');\r\n\r\n  return (\r\n    <>\r\n      <form \r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          if (validate(name)) {\r\n            pop()\r\n            setName('')\r\n            return\r\n          }\r\n        }}\r\n        style={{\r\n          display: 'inline-flex',\r\n          flexDirection: 'column'\r\n        }}\r\n      >\r\n        <NameInput onChange={({ target }) => setName(target.value)} value={name} />\r\n        <NameSubmit />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const Name = NameForm;","import React from 'react';\r\n\r\nexport const Remainder = ({\r\n  queue,\r\n}) => (\r\n  <p>{queue.length} pokemon left!</p>\r\n);\r\n","import React from 'react';\r\n\r\nexport const Sprite = ({\r\n  src,\r\n  alt = '???'\r\n}) => (\r\n  <img \r\n    src={src} \r\n    alt={alt} \r\n    style={{\r\n      maxWidth: '150px',\r\n      height: '150px',\r\n      margin: 'auto',\r\n    }}\r\n  />\r\n);\r\n","import React from 'react';\r\n\r\n/** https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm */\r\nexport function ShuffleArray(arr) {\r\n  const array = Array.from(arr);\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n};\r\n\r\n/** Use this to wire up any Context provider as an HOC */\r\nexport const WithState = Consumer => Component => props => {\r\n  return (\r\n    <Consumer>\r\n      {(context) => {\r\n        if (!context) return null;\r\n        return (<Component {...context} {...props} />);\r\n      }}\r\n    </Consumer>\r\n  )\r\n};\r\n\r\n/** random algo that is likelier to return 'true' as (pos/base === 1) */\r\nexport function roll(base, pos) {\r\n  return (pos / base) / Math.random() * 10 > 10;\r\n};\r\n\r\n/** Given a string, masks some characters in the string as '-' and returns the new string */\r\nexport function MaskString(s) {\r\n  const len = s.length;\r\n\r\n  return s.split('').map((char, i) => {\r\n    if (roll(len, i)) {\r\n      return '-';\r\n    }\r\n    return char;\r\n  }).join('');\r\n};\r\n","import React, {\r\n  createContext,\r\n  useState,\r\n  useEffect,\r\n} from 'react';\r\nimport {\r\n  WithState,\r\n} from '../utils';\r\n\r\nfunction getPokemon() {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const response = await fetch('https://pokeapi.co/api/v2/generation/1');\r\n      if (response.ok) {\r\n        const results = await response.json();\r\n        resolve(results);\r\n      }\r\n    } catch (e) {\r\n      reject(e.message);\r\n    }\r\n    reject('pokeapi err, service unavailable :(');\r\n  });\r\n}\r\n\r\nfunction mutatePokemon(d) {\r\n  const species = d.pokemon_species;\r\n  return species.map((poke) => {\r\n    const { name, url } = poke;\r\n    const id = +url.replace('https://pokeapi.co/api/v2/pokemon-species', '').replaceAll('/', '');\r\n    return {\r\n      id,\r\n      name,\r\n      sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`\r\n    };\r\n  }).sort((a, b) => a.id - b.id);\r\n}\r\n\r\nconst { Consumer: C, Provider: P } = createContext(null);\r\nexport const Consumer = C;\r\nexport const Provider = ({\r\n  children,\r\n}) => {\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const pokeKey = \"pokemon_gen_1\";\r\n    async function setPokemon() {\r\n      const pokemon = await getPokemon().catch((e) => setError(e))\r\n      window.localStorage.setItem(pokeKey, JSON.stringify(pokemon));\r\n      setData(mutatePokemon(pokemon));\r\n      return;\r\n    }\r\n\r\n    const checkCache = window.localStorage.getItem(pokeKey);\r\n    if (!checkCache) {\r\n      setPokemon();\r\n      return;\r\n    }\r\n\r\n    setData(mutatePokemon(JSON.parse(checkCache)));\r\n\r\n    return () => {\r\n      setData(null);\r\n      setError(null);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <P\r\n      value={{\r\n        pokemon: data,\r\n        error,\r\n      }}\r\n    >\r\n      { \r\n        (error || !data) && (\r\n          <p>Sorry, the game is undergoing maintenance, please get in touch if you want to see it back up again ASAP</p>\r\n        )\r\n      }\r\n      {data && children}\r\n    </P>\r\n  );\r\n};\r\n\r\nexport const WithPokeState = Component => props => WithState(Consumer)(Component)(props);","import {\r\n  useReducer,\r\n  useEffect,\r\n  useState,\r\n  useRef,\r\n} from 'react';\r\nimport {\r\n  ShuffleArray,\r\n  MaskString,\r\n} from '../utils';\r\n\r\nexport const STATE = {\r\n  IN_PROGRESS: 'IN PROGRESS',\r\n  SUCCESS: 'SUCCESS',\r\n  FAILURE: 'FAILURE',\r\n};\r\n\r\nexport const ACTION = {\r\n  POP: 'POP',\r\n  SKIP: 'SKIP',\r\n  RESET: 'RESET',\r\n  HELP: 'HELP',\r\n  STOP: 'STOP',\r\n  TOGGLE_ERROR: 'TOGGLE_ERROR',\r\n};\r\n\r\nconst ERRORS = [\r\n  'It was so close!',\r\n  'Argh, almost had it!',\r\n  'Not quite!',\r\n];\r\n\r\nconst reducer = (\r\n  prevState,\r\n  action,\r\n) => {\r\n  switch (action.type) {\r\n    case ACTION.POP: {\r\n      const { queue } = prevState;\r\n      const nextMonster = queue.shift();\r\n\r\n      if (!nextMonster) {\r\n        return {\r\n          state: STATE.SUCCESS,\r\n        };\r\n      }\r\n\r\n      return {\r\n        queue,\r\n        current: nextMonster,\r\n        state: prevState.state,\r\n      };\r\n    }\r\n    case ACTION.SKIP: {\r\n      const { queue, current } = prevState;\r\n      queue.push(current);\r\n      const nextMonster = queue.shift();\r\n\r\n      return {\r\n        queue,\r\n        current: nextMonster,\r\n        state: prevState.state,\r\n      };\r\n    }\r\n    case ACTION.RESET: {\r\n      const { queue } = action;\r\n      const shuffled = ShuffleArray(queue)\r\n\r\n      return {\r\n        state: STATE.IN_PROGRESS,\r\n        queue: Array.from(shuffled).slice(1, shuffled.length),\r\n        current: Array.from(shuffled).shift(),\r\n      };\r\n    }\r\n    case ACTION.HELP: {\r\n      const { current } = prevState\r\n      let name = current.name;\r\n\r\n      if (current.id === 29 || current.id === 32) {\r\n        name = 'nidoran';\r\n      }\r\n\r\n      if (current.id === 122) {\r\n        name = 'mr. mime';\r\n      }\r\n\r\n      const helpText = MaskString(name);\r\n      return {\r\n        ...prevState,\r\n        helpText,\r\n      };\r\n    }\r\n    case ACTION.STOP: {\r\n      return {\r\n        ...prevState,\r\n        state: STATE.FAILURE,\r\n      };\r\n    }\r\n    case ACTION.TOGGLE_ERROR: {\r\n      const { errorIndex = -1 } = prevState;\r\n      return {\r\n        ...prevState,\r\n        errorIndex: (errorIndex + 1) % ERRORS.length,\r\n      };\r\n    }\r\n    default:\r\n      return prevState;\r\n  }\r\n};\r\n\r\nconst useGameStateReducer = ({ queue }) => {\r\n  const shuffledQueue = ShuffleArray([...queue]);\r\n  return useReducer(reducer, {\r\n    state: STATE.IN_PROGRESS,\r\n    queue: shuffledQueue.slice(1, queue.length),\r\n    current: shuffledQueue.shift(),\r\n  });\r\n};\r\n\r\n// lol need a better method of doing this\r\nconst VALIDATION_MAP = {\r\n  default: (a, b) => a.trim().toLocaleLowerCase() === b.toLocaleLowerCase(),\r\n  29: (a, b) => a.trim().toLocaleLowerCase() === 'nidoran' || VALIDATION_MAP.default(a, b),\r\n  32: (a, b) => a.trim().toLocaleLowerCase() === 'nidoran' || VALIDATION_MAP.default(a, b),\r\n  122: (a, b) => a.trim().toLocaleLowerCase().replaceAll(' ', '') === 'mrmime' || a.toLocaleLowerCase().replaceAll(' ', '') === 'mr.mime' || VALIDATION_MAP.default(a, b),\r\n};\r\n\r\nexport const useDefaultGame = ({\r\n  queue,\r\n}) => {\r\n  const [state, dispatch] = useGameStateReducer({ queue });\r\n\r\n  const pop = () => dispatch({ type: ACTION.POP });\r\n  const skip = () => dispatch({ type: ACTION.SKIP });\r\n  const reset = () => dispatch({ type: ACTION.RESET, queue });\r\n  const help = () => dispatch({ type: ACTION.HELP });\r\n  \r\n  const validator = VALIDATION_MAP[state.current.id] || VALIDATION_MAP['default'];\r\n  const validate = (guess) => {\r\n    let isValid = validator(guess, state.current.name);\r\n    if (!isValid) dispatch({ type: ACTION.TOGGLE_ERROR });\r\n    return isValid;\r\n  }\r\n  return {\r\n    ...state,\r\n    dispatch,\r\n    pop,\r\n    skip,\r\n    reset,\r\n    help,\r\n    validate,\r\n    error: ERRORS[state.errorIndex],\r\n  };\r\n};\r\n\r\nexport const useTimedGame = ({\r\n  queue,\r\n  timer = 3000,\r\n}) => {\r\n  const gameState = useDefaultGame({ queue });\r\n  const [timeMS, setTimeMS] = useState(timer);\r\n  const countdown = useRef();\r\n\r\n  useEffect(() => {\r\n    countdown.current = setTimeout(() => {\r\n      if (timeMS - 1000 <= 0) {\r\n        gameState.dispatch({ type: ACTION.STOP });\r\n        clearTimeout(countdown.current);\r\n        setTimeMS(0);\r\n        return;\r\n      }\r\n      setTimeMS(timeMS - 1000);\r\n    }, 1000);\r\n  }, [timeMS, gameState]);\r\n\r\n  /** For now, hook into dispatch to extend the core game logic */\r\n  const dispatch = (action) => {\r\n    if (action.type === ACTION.POP) {\r\n      clearTimeout(countdown.current);\r\n      setTimeMS(timer);\r\n      gameState.dispatch(action);\r\n      return;\r\n    }\r\n    if (action.type === ACTION.RESET) {\r\n      clearTimeout(countdown.current);\r\n      setTimeMS(timer);\r\n      gameState.dispatch({\r\n        ...action,\r\n        queue,\r\n      });\r\n      return;\r\n    }\r\n    gameState.dispatch(action);\r\n  };\r\n\r\n  return {\r\n    ...gameState,\r\n    timeMS,\r\n    dispatch,\r\n  };\r\n};\r\n\r\nexport const useHardcoreGame = ({\r\n  queue,\r\n  allowedFailures = 10,\r\n}) => {\r\n  const gameState = useDefaultGame({ queue });\r\n  const [failuresLeft, setFailuresLeft] = useState(allowedFailures);\r\n\r\n  /** For now, hook into validate to extend the core game logic */\r\n  const validate = (guess) => {\r\n    const validationResult = gameState.validate(guess);\r\n    if (!validationResult) {\r\n      const updatedFailures = failuresLeft - 1;\r\n      if (updatedFailures <= 0) {\r\n        gameState.dispatch({ type: ACTION.STOP });\r\n      }\r\n      setFailuresLeft(updatedFailures);\r\n    }\r\n    return validationResult;\r\n  };\r\n\r\n  /** For now, hook into dispatch to extend the core game logic */\r\n  const dispatch = (action) => {\r\n    if (action.type === ACTION.RESET) {\r\n      setFailuresLeft(allowedFailures);\r\n      gameState.dispatch({\r\n        ...action,\r\n        queue,\r\n      });\r\n      return;\r\n    }\r\n    gameState.dispatch(action);\r\n  };\r\n\r\n  return {\r\n    ...gameState,\r\n    dispatch,\r\n    validate,\r\n    allowedFailures: failuresLeft,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport {\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport {\r\n  ActionBar,\r\n  ActionButton,\r\n  Debug,\r\n  Name,\r\n  Sprite,\r\n  Remainder,\r\n  Hint,\r\n  Centered,\r\n} from '../components';\r\nimport {\r\n  WithPokeState,\r\n} from '../context/pokemon';\r\nimport {\r\n  STATE,\r\n  useDefaultGame,\r\n} from '../hooks/game';\r\n\r\nexport const Guess = WithPokeState(({\r\n  pokemon,\r\n}) => {\r\n  const history = useHistory()\r\n  const {\r\n    current,\r\n    queue,\r\n    helpText,\r\n    pop,\r\n    validate,\r\n    skip,\r\n    help,\r\n    reset,\r\n    state,\r\n    error,\r\n  } = useDefaultGame({\r\n    queue: pokemon\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Centered>\r\n        <Remainder queue={queue} />\r\n        <Name validate={validate} pop={pop} />\r\n        <Sprite src={current.sprite} />\r\n        {helpText && (<Hint value={helpText} />)}\r\n        {error && (<p>{error}</p>)}\r\n        <ActionBar>\r\n          { state === STATE.IN_PROGRESS && (\r\n            <>\r\n              <ActionButton label=\"Help\" action={help} />\r\n              <ActionButton label=\"Skip\" action={skip} />\r\n              <ActionButton label=\"Quit\" action={() => history.push('/')} />\r\n            </>\r\n          )}\r\n          { state === STATE.SUCCESS && (\r\n            <>\r\n              <ActionButton label=\"Play again\" action={reset} />\r\n            </>\r\n          )}\r\n        </ActionBar>\r\n        <Debug data={state} />\r\n        <Debug data={current} />\r\n      </Centered>\r\n    </>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport {\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport {\r\n  ActionBar,\r\n  ActionButton,\r\n  Debug,\r\n  Name,\r\n  Sprite,\r\n  Remainder,\r\n  Centered,\r\n} from '../components';\r\nimport {\r\n  WithPokeState,\r\n} from '../context/pokemon';\r\nimport {\r\n  STATE,\r\n  ACTION,\r\n  useHardcoreGame,\r\n} from '../hooks/game';\r\n\r\nexport const Hardcore = WithPokeState(({\r\n  pokemon,\r\n}) => {\r\n  const history = useHistory();\r\n  const {\r\n    current,\r\n    queue,\r\n    validate,\r\n    state,\r\n    error,\r\n    dispatch,\r\n    allowedFailures,\r\n  } = useHardcoreGame({\r\n    queue: pokemon,\r\n    allowedFailures: 5,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Centered>\r\n        <Sprite src={current.sprite} />\r\n        {state !== STATE.FAILURE && (\r\n          <Name validate={validate} pop={() => dispatch({ type: ACTION.POP })} />\r\n        )}\r\n        { error && (<p>{error}</p>)}\r\n        <p>Guesses left: {allowedFailures}</p>\r\n        <ActionBar>\r\n          {state === STATE.IN_PROGRESS && (\r\n            <>\r\n              <ActionButton label=\"Quit\" action={() => history.push('/')} />\r\n            </>\r\n          )}\r\n          {(state === STATE.SUCCESS || state === STATE.FAILURE) && (\r\n            <>\r\n              <ActionButton label=\"Play again\" action={() => dispatch({ type: ACTION.RESET })} />\r\n              <ActionButton label=\"Main Menu\" action={() => history.push('/')} />\r\n            </>\r\n          )}\r\n        </ActionBar>\r\n        <Remainder queue={queue} />\r\n        <Debug data={state} />\r\n        <Debug data={current} />\r\n      </Centered>\r\n    </>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport {\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport {\r\n  ActionBar,\r\n  ActionButton,\r\n  Debug,\r\n  Name,\r\n  Sprite,\r\n  Remainder,\r\n  Centered,\r\n} from '../components';\r\nimport {\r\n  WithPokeState,\r\n} from '../context/pokemon';\r\nimport {\r\n  STATE,\r\n  ACTION,\r\n  useTimedGame,\r\n} from '../hooks/game';\r\n\r\nexport const TimeAttack = WithPokeState(({\r\n  pokemon,\r\n}) => {\r\n  const history = useHistory()\r\n  const {\r\n    current,\r\n    queue,\r\n    validate,\r\n    state,\r\n    error,\r\n    dispatch,\r\n    timeMS,\r\n  } = useTimedGame({\r\n    queue: pokemon,\r\n    timer: 10000,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Centered>\r\n        <Sprite src={current.sprite} />\r\n        <p>Time left: {timeMS / 1000} seconds!</p>\r\n        {state !== STATE.FAILURE && (\r\n          <Name validate={validate} pop={() => dispatch({ type: ACTION.POP })} />\r\n        )}\r\n        {error && (<p>{error}</p>)}\r\n        <ActionBar>\r\n          {state === STATE.IN_PROGRESS && (\r\n            <>\r\n              <ActionButton label=\"Quit\" action={() => history.push('/')} />\r\n            </>\r\n          )}\r\n          {(state === STATE.SUCCESS || state === STATE.FAILURE) && (\r\n            <>\r\n              <ActionButton label=\"Play again\" action={() => dispatch({ type: ACTION.RESET })} />\r\n              <ActionButton label=\"Main Menu\" action={() => history.push('/')} />\r\n            </>\r\n          )}\r\n        </ActionBar>\r\n        <Remainder queue={queue} />\r\n        <Debug data={state} />\r\n        <Debug data={current} />\r\n      </Centered>\r\n    </>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport {\r\n  Centered,\r\n  ActionBar,\r\n  ActionButton,\r\n} from './components';\r\nimport {\r\n  Guess,\r\n  Hardcore,\r\n  TimeAttack,\r\n} from './pages';\r\nimport { Provider } from './context/pokemon';\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <Centered>\r\n      <div style={{ paddingBottom: '2em', paddingTop: '2em' }}>\r\n        <h1>PokeGuess</h1>\r\n        <p>\r\n          Start a new game\r\n        </p>\r\n      </div>\r\n      <ActionBar>\r\n        <ActionButton label=\"Casual\" action={() => history.push('/casual')} />\r\n        <ActionButton label=\"Hardcore\" action={() => history.push('/hardcore')} />\r\n        <ActionButton label=\"Time Attack\" action={() => history.push('/time-attack')} />\r\n      </ActionBar>\r\n    </Centered>\r\n  );\r\n}\r\n\r\nexport const App = () => (\r\n  <div\r\n    style={{\r\n      width: '100%',\r\n      height: '100%',\r\n      overflow: 'hidden',\r\n      textAlign: 'center'\r\n    }}\r\n  >\r\n    <Provider>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route path=\"/casual\" exact>\r\n            <Guess />\r\n          </Route>\r\n          <Route path=\"/hardcore\" exact>\r\n            <Hardcore />\r\n          </Route>\r\n          <Route path=\"/time-attack\" exact>\r\n            <TimeAttack  />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <div>Oh no :(</div>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  </div>\r\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}